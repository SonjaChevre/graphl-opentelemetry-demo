version: '0.1'

x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  default:
    name: opentelemetry-demo
    driver: bridge

volumes:
  tyk-redis-data:

services:

  # ********************
  # Demo services
  # ********************

  photos:
    image: nodejs-photos
    build: ./photos 
    ports:
      - "3001:3001"

  graphql:
    image: nodejs-graphql
    build: ./graphql-server 
    ports:
      - "4000:4000"


  frontend:
    image: nodejs-react
    build: ./frontend/last-minute-deals
    ports:
      - "3000:3000"

  # ********************
  # Tyk services
  # ********************

 # ******************
  # Tyk Services
  # ******************
  tyk-dashboard:
    image: tykio/tyk-dashboard:v5.0
    ports:
      - 3010:3010
    volumes:
      - ./tyk/confs/tyk_analytics.conf:/opt/tyk-dashboard/tyk_analytics.conf
      - ./tyk/certs:/opt/tyk-dashboard/certs
    environment:
      - TYK_DB_LICENSEKEY=${TYK_DASHBOARD_LICENSE:?Dashboard licence missing from Docker environment file .env.}
      - TYK_DB_TYKAPI_HOST=${TYK_GW_URL}
      - TYK_DB_TYKAPI_PORT=${TYK_GW_PORT}
    depends_on:
      - tyk-redis
      - tyk-mongo
      - otelcol
  tyk-gateway:
    image: tyk-otel
    ports:
      - 8080:8080
    environment:
      - TYK_GW_POLICIES_POLICYCONNECTIONSTRING=${TYK_DASHBOARD_HOST}:${TYK_DASHBOARD_PORT}
      - TYK_GW_DBAPPCONFOPTIONS_CONNECTIONSTRING=${TYK_DASHBOARD_HOST}:${TYK_DASHBOARD_PORT}
      - TYK_GW_TRACER_ENABLED
      - TYK_GW_TRACER_NAME
      - TYK_GW_TRACER_OPTIONS_URL
      - TYK_GW_TRACER_OPTIONS_TIMEOUT
      - DOCKER_DEFAULT_PLATFORM=linux/amd64
    volumes:
      - ./tyk/confs/tyk_pro.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk/certs:/opt/tyk-gateway/certs
      - ./tyk/goplugins/dummy_plugin.so:/opt/tyk-gateway/goplugins/dummy_plugin.so
    depends_on:
      - tyk-redis
      - otelcol
      - tyk-dashboard
  tyk-redis:
    image: redis:6.0.4
    ports:
      - "6380:6379"
    volumes:
    - ./tyk/volumes/redis:/data
  tyk-mongo:
    image: mongo:4.0
    command: ["mongod", "--smallfiles"]
    ports:
      - 27017:27017
    volumes:
      - ./tyk/volumes/mongo:/data/db



  # ********************
  # Telemetry Components
  # ********************


  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.61.0
    container_name: graphql-demo-otel-col
    deploy:
      resources:
        limits:
          memory: 100M
    restart: always
    command: [ "--config=/etc/otelcol-config.yml" ]
    volumes:
      - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      - jaeger
    logging: *logging

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    container_name: graphql-demo-jaeger
    command: ["--memory.max-traces", "10000", "--query.base-path", "/jaeger/ui"]
    deploy:
      resources:
        limits:
          memory: 275M
    restart: always
    ports:
      - "16686:16686"                    # Jaeger UI
      - "4317"                           # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    logging: *logging
